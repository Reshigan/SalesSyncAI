version: '3.8'

# SalesSync Complete Production Docker Compose
# Full production deployment with all services and monitoring

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: salessync-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-salessync_production}
      POSTGRES_USER: ${POSTGRES_USER:-salessync_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-SalesSync2024!Production}
      POSTGRES_HOST_AUTH_METHOD: md5
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - postgres_logs:/var/log/postgresql
      - ./database/init:/docker-entrypoint-initdb.d:ro
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    networks:
      - salessync-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-salessync_user} -d ${POSTGRES_DB:-salessync_production}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # SalesSync Application (All-in-One)
  salessync:
    build:
      context: .
      dockerfile: Dockerfile.complete
      args:
        NODE_ENV: production
    container_name: salessync-app
    restart: unless-stopped
    environment:
      # Application Environment
      NODE_ENV: production
      PORT: 3000
      TZ: ${TZ:-UTC}
      
      # Database Configuration
      DATABASE_URL: postgresql://${POSTGRES_USER:-salessync_user}:${POSTGRES_PASSWORD:-SalesSync2024!Production}@postgres:5432/${POSTGRES_DB:-salessync_production}
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: ${POSTGRES_DB:-salessync_production}
      POSTGRES_USER: ${POSTGRES_USER:-salessync_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-SalesSync2024!Production}
      
      # Redis Configuration
      REDIS_URL: redis://:${REDIS_PASSWORD:-SalesSync2024!Redis}@127.0.0.1:6379
      REDIS_HOST: 127.0.0.1
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD:-SalesSync2024!Redis}
      
      # JWT Configuration
      JWT_SECRET: ${JWT_SECRET:-SalesSync2024!JWT!Secret!Key!Production!$(date +%s)}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET:-SalesSync2024!JWT!Refresh!Secret!Key!Production!$(date +%s)}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-24h}
      JWT_REFRESH_EXPIRES_IN: ${JWT_REFRESH_EXPIRES_IN:-7d}
      
      # API Configuration
      API_BASE_URL: ${API_BASE_URL:-http://localhost}
      CORS_ORIGIN: ${CORS_ORIGIN:-http://localhost,https://localhost}
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS:-http://localhost,https://localhost,http://127.0.0.1,https://127.0.0.1}
      
      # Frontend Configuration
      REACT_APP_API_URL: /api
      REACT_APP_ENVIRONMENT: production
      REACT_APP_VERSION: ${APP_VERSION:-1.0.0}
      
      # Security Configuration
      BCRYPT_ROUNDS: ${BCRYPT_ROUNDS:-12}
      SESSION_SECRET: ${SESSION_SECRET:-SalesSync2024!Session!Secret!$(date +%s)}
      
      # Email Configuration (Optional)
      SMTP_HOST: ${SMTP_HOST:-}
      SMTP_PORT: ${SMTP_PORT:-587}
      SMTP_USER: ${SMTP_USER:-}
      SMTP_PASS: ${SMTP_PASS:-}
      SMTP_FROM: ${SMTP_FROM:-noreply@salessync.com}
      
      # File Upload Configuration
      MAX_FILE_SIZE: ${MAX_FILE_SIZE:-10485760}
      UPLOAD_PATH: /app/uploads
      
      # Logging Configuration
      LOG_LEVEL: ${LOG_LEVEL:-info}
      LOG_FORMAT: ${LOG_FORMAT:-combined}
      
      # Rate Limiting
      RATE_LIMIT_WINDOW_MS: ${RATE_LIMIT_WINDOW_MS:-900000}
      RATE_LIMIT_MAX_REQUESTS: ${RATE_LIMIT_MAX_REQUESTS:-100}
      
      # Database Seeding
      SEED_DATABASE: ${SEED_DATABASE:-true}
      
      # Monitoring
      ENABLE_METRICS: ${ENABLE_METRICS:-true}
      METRICS_PORT: ${METRICS_PORT:-9090}
      
    volumes:
      - app_logs:/var/log/supervisor
      - app_uploads:/app/uploads
      - nginx_logs:/var/log/nginx
      - redis_data:/var/lib/redis
    ports:
      - "${APP_PORT:-80}:80"
      - "${API_PORT:-3000}:3000"
      - "${REDIS_PORT:-6379}:6379"
    networks:
      - salessync-network
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "/app/healthcheck.sh"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

# Named Volumes
volumes:
  postgres_data:
    driver: local
  postgres_logs:
    driver: local
  app_logs:
    driver: local
  app_uploads:
    driver: local
  nginx_logs:
    driver: local
  redis_data:
    driver: local

# Networks
networks:
  salessync-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16