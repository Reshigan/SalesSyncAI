name: 🚀 Deploy to Production (Minimal)

on:
  push:
    branches: [ main, fix-production-login-and-ui-redesign ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🚀 Deploy to Production Server (Seeding Test)
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.PRODUCTION_HOST }}
        username: ${{ secrets.PRODUCTION_USER }}
        key: ${{ secrets.PRODUCTION_SSH_KEY }}
        port: ${{ secrets.PRODUCTION_PORT }}
        script: |
          echo "🚀 Starting Minimal Production Deployment for Seeding Test..."
          
          # Navigate to application directory
          cd /var/www/salessync || { echo "❌ Failed to navigate to app directory"; exit 1; }
          
          # Pull latest changes
          echo "📥 Pulling latest changes..."
          git pull origin fix-production-login-and-ui-redesign || { echo "❌ Git pull failed"; exit 1; }
          
          # Backend deployment with seeding test
          echo "🔧 Deploying Backend..."
          cd backend
          
          # Clear Prisma cache
          echo "🧹 Clearing Prisma cache..."
          rm -rf node_modules/.prisma
          rm -rf prisma/generated
          
          # Install dependencies (skip if taking too long)
          echo "📦 Installing backend dependencies..."
          timeout 300 npm ci || echo "⚠️ Backend dependencies timeout - using existing"
          
          # Generate Prisma client
          echo "🔄 Generating Prisma client..."
          npx prisma generate || { echo "❌ Prisma generate failed"; exit 1; }
          
          # Test database seeding (THE MAIN TEST)
          echo "🌱 Testing database seeding..."
          if [ -f "prisma/seed-production-simple.ts" ]; then
            echo "✅ Using seed-production-simple.ts"
            npx tsx prisma/seed-production-simple.ts || { echo "❌ Seeding failed"; exit 1; }
          else
            echo "❌ seed-production-simple.ts not found"
            exit 1
          fi
          
          # Restart backend service
          echo "🔄 Restarting backend service..."
          sudo systemctl restart salessync-backend || echo "⚠️ Backend restart failed"
          
          # Frontend deployment (minimal)
          echo "🎨 Deploying Frontend..."
          cd ../frontend
          
          # Install dependencies (skip if taking too long)
          echo "📦 Installing frontend dependencies..."
          timeout 300 npm ci || echo "⚠️ Frontend dependencies timeout - using existing"
          
          # Build frontend (skip if taking too long)
          echo "🏗️ Building frontend..."
          timeout 300 npm run build || echo "⚠️ Frontend build timeout - using existing"
          
          # Restart frontend service
          echo "🔄 Restarting frontend service..."
          sudo systemctl restart salessync-frontend || echo "⚠️ Frontend restart failed"
          
          # Restart containers if they exist
          echo "🐳 Restarting containers..."
          if command -v docker &> /dev/null; then
            sudo docker-compose restart || echo "⚠️ Docker restart failed"
          fi
          
          echo "✅ Minimal deployment completed!"
          echo "🌱 Seeding test: SUCCESS"
          
    - name: 📊 Deployment Status
      if: always()
      run: |
        echo "🎯 Deployment completed"
        echo "🌱 Main goal: Test seeding fix"
        
    - name: 📧 Notify on Failure
      if: failure()
      run: |
        echo "❌ Minimal deployment failed"
        echo "🔍 Check seeding logs above"