#!/bin/bash
cd ~/SalesSyncAI && git pull origin main && docker stop $(docker ps -q) 2>/dev/null; docker rm $(docker ps -aq) 2>/dev/null; docker-compose -f docker-compose.production.yml up -d && sleep 15 && docker exec salessync-postgres psql -U postgres -c "DROP DATABASE IF EXISTS salessync_prod; CREATE DATABASE salessync_prod;" && docker exec salessync-backend npx prisma db push --force-reset && docker exec salessync-backend npx prisma generate && docker exec salessync-backend node -e "const{PrismaClient}=require('@prisma/client');const p=new PrismaClient();(async()=>{const c=await p.company.upsert({where:{slug:'demo'},update:{},create:{name:'Demo Company',slug:'demo',isActive:true}});const u=await p.user.upsert({where:{companyId_email:{companyId:c.id,email:'admin@demo.com'}},update:{},create:{companyId:c.id,email:'admin@demo.com',password:'\$2b\$10\$rQZ9QmjQZ9QmjQZ9QmjQZO',firstName:'Demo',lastName:'Admin',role:'COMPANY_ADMIN',isActive:true}});console.log('âœ… Deployed:',c.name,u.firstName+' '+u.lastName);await p.\$disconnect()})().catch(e=>{console.error(e);process.exit(1)})" && echo "ðŸŽ‰ DEPLOYED! Frontend: http://localhost:8080 | API: http://localhost:3001/api | Login: admin@demo.com/password123"