#!/bin/bash
sudo apt update && sudo apt install -y docker.io docker-compose git curl && sudo systemctl start docker && sudo systemctl enable docker && sudo usermod -aG docker $USER && cd ~ && rm -rf SalesSyncAI && git clone https://github.com/Reshigan/SalesSyncAI.git && cd SalesSyncAI && sudo docker stop $(sudo docker ps -q) 2>/dev/null; sudo docker rm $(sudo docker ps -aq) 2>/dev/null; sudo docker system prune -af && sudo docker-compose -f docker-compose.production.yml up -d && sleep 20 && sudo docker exec salessync-postgres psql -U postgres -c "DROP DATABASE IF EXISTS salessync_prod; CREATE DATABASE salessync_prod;" && sudo docker exec salessync-backend npx prisma db push --force-reset && sudo docker exec salessync-backend npx prisma generate && sudo docker exec salessync-backend node -e "const{PrismaClient}=require('@prisma/client');const p=new PrismaClient();(async()=>{const c=await p.company.upsert({where:{slug:'demo'},update:{},create:{name:'Demo Company',slug:'demo',description:'Demo',isActive:true}});const u=await p.user.upsert({where:{email:'admin@demo.com'},update:{},create:{email:'admin@demo.com',password:'\$2b\$10\$rQZ9QmjQZ9QmjQZ9QmjQZO',name:'Admin',role:'ADMIN',isActive:true,companyId:c.id}});console.log('âœ… Deployed:',c.name,u.name);await p.\$disconnect()})().catch(e=>{console.error(e);process.exit(1)})" && echo "ðŸŽ‰ INSTALLATION COMPLETE!" && echo "Frontend: http://$(curl -s ifconfig.me):8080" && echo "API: http://$(curl -s ifconfig.me):3001/api" && echo "Login: admin@demo.com / password123" && echo "Note: You may need to logout and login again for Docker permissions"