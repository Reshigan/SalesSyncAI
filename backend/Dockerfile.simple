# Simple Production Dockerfile for SalesSyncAI Backend (without canvas dependencies)
FROM node:20-alpine AS builder

# Set working directory
WORKDIR /app

# Copy package files
COPY package.simple.json package.json
COPY prisma ./prisma/

# Install all dependencies (including dev dependencies for build)
RUN npm install && npm cache clean --force

# Copy minimal source code
COPY src/index.minimal.ts src/index.ts
COPY prisma ./prisma/
COPY tsconfig.json ./

# Generate Prisma client
RUN npx prisma generate

# Build TypeScript
RUN npm run build

# Production stage
FROM node:20-alpine AS production

# Install runtime dependencies
RUN apk add --no-cache dumb-init curl openssl

# Create app user
RUN addgroup -g 1001 -S nodejs && \
    adduser -S salessync -u 1001 -G nodejs

# Set working directory
WORKDIR /app

# Copy package files
COPY package.simple.json package.json
COPY prisma ./prisma/

# Install only production dependencies
RUN npm install --omit=dev && npm cache clean --force

# Generate Prisma client for production
RUN npx prisma generate

# Copy built application from builder stage
COPY --from=builder --chown=salessync:nodejs /app/dist ./dist

# Create necessary directories
RUN mkdir -p logs uploads && chown -R salessync:nodejs logs uploads

# Switch to non-root user
USER salessync

# Expose port
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
  CMD curl -f http://localhost:3000/health || exit 1

# Start application with dumb-init
ENTRYPOINT ["dumb-init", "--"]
CMD ["node", "dist/index.js"]